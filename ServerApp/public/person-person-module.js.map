{"version":3,"sources":["./src/app/person/person-routing.module.ts","./src/app/person/services/person.service.ts","./src/app/shared/utilities/urls.ts","./src/app/person/components/person/person.component.ts","./src/app/person/components/person/person.component.html","./src/app/person/person.module.ts"],"names":[],"mappings":"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","file":"person-person-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PersonComponent } from './components/person/person.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PersonComponent },  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class PersonRoutingModule { }","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport Url from 'src/app/shared/utilities/urls';\nimport { Person } from '../models/person';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  public getPerson(value: Number):Observable<any>{\n    return this.httpClient.get(`${Url.PERSON_API_ENDPOINT}${value}`);\n  }\n}\n","class Url{\r\n    static readonly PERSON_API_ENDPOINT:String = \"/redspace/api/people/\";\r\n}\r\n\r\nexport default Url;","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { SearchBarComponent } from 'src/app/shared/components/search-bar/search-bar.component';\nimport { PersonList } from 'src/app/shared/utilities/personlist';\nimport { map } from 'rxjs/operators';\nimport { Person } from '../../models/person';\nimport { PersonService } from '../../services/person.service';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.scss']\n})\n\nexport class PersonComponent implements OnInit {\n\n  public searchType: string = \"Id\";\n  public personList!:PersonList[];\n  public personData!:Person;\n  public loading: boolean = false;\n  public error: boolean = false;\n\n  @ViewChild(SearchBarComponent) searchBar!: SearchBarComponent;\n\n  constructor(private personService: PersonService ) {\n    this.personList = [\n      {id:1,name:\"Luke Skywalker\"},\n      {id:2,name:\"C-3PO\"},\n      {id:3,name:\"R2-D2\"},\n      {id:4,name:\"Darth Vader\"},\n      {id:5,name:\"Leia Organa\"},\n      {id:6,name:\"Owen Lars\"},\n      {id:7,name:\"Beru Whitesun lars\"},\n      {id:8,name:\"R5-D4\"},\n      {id:9,name:\"Biggs Darklighter\"},\n      {id:10,name:\"Obi-Wan Kenobi\"},\n      {id:11,name:\"Anakin Skywalker\"},\n      {id:12,name:\"Wilhuff Tarkin\"},\n    ];\n  }\n  \n  ngOnInit(): void {}\n\n  public search(){\n    const personId =  this.searchBar.getSearchValue();\n\n    if(personId) {\n      this.loading = true;\n      this.error = false;\n\n      this.personService.getPerson(personId)\n      .pipe(\n        map(response => response.data)\n      )\n      .subscribe(\n        (response: Person) => {\n          this.personData = response;\n          this.loading = false;\n        },\n        (error: HttpErrorResponse) => {\n          this.error = true;\n          this.loading = false;\n        }\n      );\n    }  \n  }\n\n  public searchByType(type: string) {\n    this.searchType = type;\n\n    if(type === 'Name'){\n      this.searchBar.inputSelected = undefined;    \n      this.searchBar.populatePersonList(this.personList);\n      this.searchBar.toggleInputBound(true); \n    } else if (type === 'Id'){\n      this.searchBar.inputSelected = undefined;\n      this.searchBar.toggleInputBound(false);\n    }\n  }\n}\n","<div class=\"content\">\n    <div class=\"search-container\">\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-info dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                {{searchType}}\n            </button>\n            <div class=\"dropdown-menu\">\n              <a class=\"dropdown-item\" (click)=\"searchByType('Name')\">Search By Name</a>\n              <a class=\"dropdown-item\" (click)=\"searchByType('Id')\">Search By ID</a>\n            </div>\n        </div>\n        <app-search-bar class=\"search-bar\"></app-search-bar> \n        \n        <button class=\"btn btn-success my-2 my-sm-0\" (click)=\"search()\">Search</button>\n    </div>\n\n    <div *ngIf=\"loading\" style=\"position: absolute; top:50%; left: 50%;\">\n      <img class=\"loading\" src=\"/assets/light-saber.svg\" width=\"80\" height=\"80\"/>\n      <p style=\"margin-top:15px;text-align: center; font-family: 'Pacifica',cursive; font-size: large; font-weight: 300;\">Fetching...</p>\n    </div>\n\n    <div *ngIf=\"!loading\">\n      <div *ngIf=\"error\">\n        <div style=\"position: absolute; top:40%; left: 40%;\" *ngIf=\"error\">\n          <img src=\"/assets/404.png\" width=\"280\"/>\n          <p style=\"text-align: center; font-family: 'Pacifica',cursive; font-size: x-large; font-weight: 300;\">Enter Valid Id</p>\n        </div>\n      </div>\n\n      <div *ngIf=\"!error\">\n        <div *ngIf=\"personData\">\n          <app-datagrid [personData]=\"personData\"></app-datagrid>\n        </div>\n\n        <div style=\"position: absolute; top:40%; left: 40%;\" *ngIf=\"!personData\">\n          <img src=\"/assets/search-img.svg\" width=\"280\"/>\n          <p style=\"text-align: center; font-family: 'Pacifica',cursive; font-size: large; font-weight: 300;\">Search StarWars Characters</p>\n        </div>\n      </div>\n    </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { PersonComponent } from './components/person/person.component';\nimport { PersonRoutingModule } from './person-routing.module';\nimport { DatagridComponent } from '../shared/components/datagrid/datagrid.component';\n\n\n@NgModule({\n  declarations: [\n    PersonComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    PersonRoutingModule\n  ]\n})\nexport class PersonModule { }\n"],"sourceRoot":"webpack:///"}